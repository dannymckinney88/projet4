[{"/Users/user/Documents/SEIR/unit4/project4/src/index.js":"1","/Users/user/Documents/SEIR/unit4/project4/src/App.js":"2","/Users/user/Documents/SEIR/unit4/project4/src/lib/commerce.js":"3","/Users/user/Documents/SEIR/unit4/project4/src/components/Header.js":"4","/Users/user/Documents/SEIR/unit4/project4/src/config/routes.js":"5","/Users/user/Documents/SEIR/unit4/project4/src/pages/AllProducts.js":"6","/Users/user/Documents/SEIR/unit4/project4/src/pages/Cart.js":"7","/Users/user/Documents/SEIR/unit4/project4/src/pages/Home.js":"8","/Users/user/Documents/SEIR/unit4/project4/src/pages/SingleProduct.js":"9","/Users/user/Documents/SEIR/unit4/project4/src/components/Hero.js":"10","/Users/user/Documents/SEIR/unit4/project4/src/components/Products.js":"11","/Users/user/Documents/SEIR/unit4/project4/src/components/ProductItem.js":"12","/Users/user/Documents/SEIR/unit4/project4/src/components/CartItem.js":"13","/Users/user/Documents/SEIR/unit4/project4/src/pages/Checkout.js":"14","/Users/user/Documents/SEIR/unit4/project4/src/context/Cart.js":"15","/Users/user/Documents/SEIR/unit4/project4/src/components/CheckoutForm.js":"16","/Users/user/Documents/SEIR/unit4/project4/src/context/Payment.js":"17","/Users/user/Documents/SEIR/unit4/project4/src/context/Order.js":"18"},{"size":718,"mtime":1608183105071,"results":"19","hashOfConfig":"20"},{"size":413,"mtime":1608183097661,"results":"21","hashOfConfig":"20"},{"size":125,"mtime":1608075532847,"results":"22","hashOfConfig":"20"},{"size":1535,"mtime":1608186337971,"results":"23","hashOfConfig":"20"},{"size":970,"mtime":1608186241962,"results":"24","hashOfConfig":"20"},{"size":1123,"mtime":1608184575896,"results":"25","hashOfConfig":"20"},{"size":2890,"mtime":1608184612573,"results":"26","hashOfConfig":"20"},{"size":1321,"mtime":1608172484299,"results":"27","hashOfConfig":"20"},{"size":1920,"mtime":1608187331011,"results":"28","hashOfConfig":"20"},{"size":204,"mtime":1607710662783,"results":"29","hashOfConfig":"20"},{"size":386,"mtime":1608186402661,"results":"30","hashOfConfig":"20"},{"size":1254,"mtime":1608186409225,"results":"31","hashOfConfig":"20"},{"size":1645,"mtime":1608186253833,"results":"32","hashOfConfig":"20"},{"size":2446,"mtime":1608186054902,"results":"33","hashOfConfig":"20"},{"size":724,"mtime":1608186387936,"results":"34","hashOfConfig":"20"},{"size":9984,"mtime":1608186424207,"results":"35","hashOfConfig":"20"},{"size":1007,"mtime":1608186438374,"results":"36","hashOfConfig":"20"},{"size":380,"mtime":1608186246916,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"6mejoj",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/user/Documents/SEIR/unit4/project4/src/index.js",[],["78","79"],"/Users/user/Documents/SEIR/unit4/project4/src/App.js",[],"/Users/user/Documents/SEIR/unit4/project4/src/lib/commerce.js",[],"/Users/user/Documents/SEIR/unit4/project4/src/components/Header.js",[],"/Users/user/Documents/SEIR/unit4/project4/src/config/routes.js",[],"/Users/user/Documents/SEIR/unit4/project4/src/pages/AllProducts.js",[],"/Users/user/Documents/SEIR/unit4/project4/src/pages/Cart.js",[],"/Users/user/Documents/SEIR/unit4/project4/src/pages/Home.js",[],"/Users/user/Documents/SEIR/unit4/project4/src/pages/SingleProduct.js",["80","81","82"],"/Users/user/Documents/SEIR/unit4/project4/src/components/Hero.js",[],"/Users/user/Documents/SEIR/unit4/project4/src/components/Products.js",[],"/Users/user/Documents/SEIR/unit4/project4/src/components/ProductItem.js",["83"],"import React, { useContext } from \"react\";\nimport \"../styles/product.css\";\nimport { commerce } from \"../lib/commerce\";\nimport { CartContext } from \"../context/Cart\";\nimport { Link } from \"react-router-dom\";\n\nconst Product = (props) => {\n  const [cart, setCart] = useContext(CartContext);\n\n  const handleAddToCart = () => {\n    commerce.cart\n      .add(props.product.id, 1)\n      .then((item) => {\n        setCart({ cart: item.cart });\n      })\n      .catch((error) => {\n        console.error(\"There was an error adding the item to the cart\", error);\n      });\n  };\n  return (\n    <div className=\"product-card\">\n      <img\n        className=\"product-img\"\n        src={props.product.media.source}\n        alt={props}\n      />\n      <div>\n        <Link\n          to={`/product/${props.product.id}`}\n          style={{ textDecoration: \"none\" }}\n        >\n          {\" \"}\n          <h4 className=\"item-name\">{props.product.name}</h4>{\" \"}\n        </Link>\n      </div>\n      <div>\n        <p>{props.product.price.formatted_with_symbol}</p>\n        <button\n          name=\"Add to cart\"\n          className=\"product-btn\"\n          onClick={handleAddToCart}\n        >\n          Quick Add\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Product;\n","/Users/user/Documents/SEIR/unit4/project4/src/components/CartItem.js",[],"/Users/user/Documents/SEIR/unit4/project4/src/pages/Checkout.js",["84"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { CartContext } from \"../context/Cart\";\nimport { PaymentContext } from \"../context/Payment\";\nimport { OrderContext } from \"../context/Order\";\nimport { commerce } from \"../lib/commerce\";\nimport CheckoutForm from \"../components/CheckoutForm\";\n\nconst Checkout = (props) => {\n  const [cart, setCart] = useContext(CartContext);\n  const [paymentInfo, setPaymentInfo] = useContext(PaymentContext);\n  const [order, setOrder] = useContext(OrderContext);\n\n  const [checkoutToken, setCheckoutToken] = useState();\n\n  const cartId = props.match.params.cartId;\n\n  const generateCheckoutToken = () => {\n    commerce.checkout\n      .generateToken(cartId, { type: \"cart\" })\n      .then((token) => {\n        console.log(token);\n        setCheckoutToken(token);\n      })\n\n      .catch((error) => {\n        console.log(\"There was an error in generating a token\", error);\n      });\n  };\n  useEffect(() => {\n    generateCheckoutToken();\n  }, []);\n\n  const handleFormChanges = (e) => {\n    setPaymentInfo({ ...paymentInfo, [e.target.name]: e.target.value });\n  };\n\n  const refreshCart = () => {\n    commerce.cart\n      .refresh()\n      .then((newCart) => {\n        setCart({\n          cart: newCart,\n        });\n      })\n      .catch((error) => {\n        console.log(\"There was an error refreshing your cart\", error);\n      });\n  };\n\n  const handleCaptureCheckout = async (tokenId, newOrder) => {\n    console.log(newOrder);\n    await commerce.checkout\n      .capture(tokenId, newOrder)\n      .then((order) => {\n        console.log(order);\n        console.log(\"order\");\n        // Save the order into state\n        setOrder({\n          order,\n        });\n        // Clear the cart\n        console.log(order);\n        refreshCart();\n        // Send the user to the receipt\n        props.history.push(\"/confirmation\");\n        // Store the order in session storage so we can show it again if the\n        // user refreshes the page!\n        window.sessionStorage.setItem(\"order_receipt\", JSON.stringify(order));\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    console.log(order);\n  };\n\n  return (\n    <div>\n      <CheckoutForm\n        checkoutToken={checkoutToken}\n        paymentInfo={paymentInfo}\n        handleFormChanges={handleFormChanges}\n        handleCaptureCheckout={handleCaptureCheckout}\n        cart={cart}\n      />\n    </div>\n  );\n};\n\nexport default Checkout;\n","/Users/user/Documents/SEIR/unit4/project4/src/context/Cart.js",[],"/Users/user/Documents/SEIR/unit4/project4/src/components/CheckoutForm.js",["85","86","87","88","89"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { PaymentContext } from \"../context/Payment\";\n// import Confirmation from './Confirmation'\nimport \"../styles/form.css\";\n\nimport { commerce } from \"../lib/commerce\";\nconst CheckoutForm = (props) => {\n  const [paymentInfo, setPaymentInfo] = useContext(PaymentContext);\n  const [option, setOption] = useState();\n\n  let checkoutToken = props.checkoutToken;\n  const fetchSubdivisions = () => {\n    console.log(\"fetch\");\n    commerce.services\n      .localeListSubdivisions(\"US\")\n      .then((subdivisions) => {\n        console.log(subdivisions);\n        setPaymentInfo({\n          shippingSubdivisions: subdivisions.subdivisions,\n        });\n      })\n      .catch((error) => {\n        console.log(\"There was an error fetching the subdivisions\", error);\n      });\n  };\n\n  const fetchShippingCountries = (checkoutTokenId) => {\n    if (checkoutToken) {\n      commerce.services\n        .localeListShippingCountries(checkoutToken.id)\n        .then((countries) => {\n          setPaymentInfo({\n            shippingCountries: countries.countries,\n          });\n        })\n        .catch((error) => {\n          console.log(\n            \"There was an error fetching a list of shipping countries\",\n            error\n          );\n        });\n    }\n  };\n\n  const getShippingOptions = (checkoutTokenId, country, region = null) => {\n    if (props.checkoutToken) {\n      commerce.checkout\n        .getShippingOptions(props.checkoutToken.id, {\n          country: \"US\",\n        })\n        .then((res) => {\n          console.log(res);\n          setOption(res[0].id);\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  // useEffect(() =>{fetchShippingCountries()},[])\n  useEffect(() => {\n    fetchSubdivisions();\n  }, [checkoutToken]);\n\n  useEffect(() => {\n    getShippingOptions();\n  }, [checkoutToken]);\n\n  const handleCaptureCheckout = async (e) => {\n    console.log(checkoutToken.live);\n    e.preventDefault();\n    const orderData = {\n      line_items: checkoutToken.live.line_items,\n      customer: {\n        firstname: paymentInfo.firstName,\n        lastname: paymentInfo.lastName,\n        email: paymentInfo.email,\n      },\n      shipping: {\n        name: paymentInfo.shippingName,\n        street: paymentInfo.shippingStreet,\n        town_city: paymentInfo.shippingCity,\n        county_state: \"AZ\",\n        postal_zip_code: paymentInfo.shippingPostalZipCode,\n        country: \"US\",\n      },\n      fulfillment: {\n        shipping_method: option,\n      },\n      payment: {\n        gateway: \"test_gateway\",\n        card: {\n          number: paymentInfo.cardNum,\n          expiry_month: paymentInfo.expMonth,\n          expiry_year: paymentInfo.expYear,\n          cvc: paymentInfo.ccv,\n          postal_zip_code: paymentInfo.shippingPostalZipCode,\n        },\n      },\n    };\n\n    console.log(checkoutToken);\n    console.log(orderData);\n    props.handleCaptureCheckout(checkoutToken.id, orderData);\n  };\n\n  const renderCheckoutForm = () => {\n    const {\n      shippingCountries,\n      shippingSubdivisions,\n      shippingOptions,\n    } = paymentInfo;\n    return (\n      <>\n        <form onChange={props.handleFormChanges}>\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col\">\n                <h6>Personal info</h6>\n                <div className=\"personal-info\">\n                  <div className=\"form-group\">\n                    <label>First Name</label>\n                    <input\n                      onChange={props.handleFormChanges}\n                      type=\"name\"\n                      name=\"firstName\"\n                      className=\"form-control\"\n                      aria-describedby=\"emailHelp\"\n                      placeholder=\"Enter first name\"\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label>Last Name</label>\n                    <input\n                      onChange={props.handleFormChanges}\n                      type=\"name\"\n                      name=\"lastName\"\n                      className=\"form-control\"\n                      placeholder=\"Enter last name\"\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label>Email</label>\n                    <input\n                      name=\"email\"\n                      onChange={props.handleFormChanges}\n                      type=\"email\"\n                      className=\"form-control\"\n                      placeholder=\"email\"\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"col\">\n                <h6>shipping info</h6>\n                <div className=\"form-group\">\n                  <label>Full name</label>\n                  <input\n                    name=\"shippingName\"\n                    onChange={props.handleFormChanges}\n                    type=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"email\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Street address</label>\n                  <input\n                    name=\"shippingStreet\"\n                    onChange={props.handleFormChanges}\n                    type=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"email\"\n                  />\n                </div>\n                <div className=\"coutnry\">\n                  <div className=\"form-group\">\n                    <label>City</label>\n                    <input\n                      name=\"shippingCity\"\n                      onChange={props.handleFormChanges}\n                      type=\"email\"\n                      className=\"form-control\"\n                      placeholder=\"Enter city\"\n                    />\n                  </div>\n\n                  <select\n                    name=\"shippingStateProvince\"\n                    onChange={props.handleFormChanges}\n                    className=\"custom-select w-25 mt-3\"\n                  >\n                    <option className=\"checkout__option\" disabled>\n                      Select state\n                    </option>\n                    {checkoutToken\n                      ? Object.keys(shippingSubdivisions).map((index) => {\n                          return (\n                            <option value={index} key={index}>\n                              {shippingSubdivisions[index]}\n                            </option>\n                          );\n                        })\n                      : \"\"}\n                    ;\n                  </select>\n\n                  <select\n                    name=\"shippingCountry\"\n                    className=\"custom-select w-25 mt-3\"\n                  >\n                    <option disabled>Country</option>\n                    <option>USA</option>\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                  <label>Postal/Zip code</label>\n                  <input\n                    name=\"shippingPostalZipCode\"\n                    onChange={props.handleFormChanges}\n                    type=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Enter zipcode\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col cc\">\n                <div className=\"form-group w-50\">\n                  <label for=\"ccn\">Credit Card Number</label>\n                  <input\n                    onChange={props.handleFormChanges}\n                    className=\"form-control\"\n                    type=\"tel\"\n                    name=\"cardNum\"\n                    inputmode=\"numeric\"\n                    pattern=\"[0-9\\s]{13,19}\"\n                    autocomplete=\"cc-number\"\n                    maxlength=\"19\"\n                    placeholder=\"xxxx xxxx xxxx xxxx\"\n                  ></input>\n                </div>\n                <div className=\"form-group w-25\">\n                  <label for=\"ccn\">CCV</label>\n                  <input\n                    className=\"form-control\"\n                    onChange={props.handleFormChanges}\n                    type=\"tel\"\n                    inputmode=\"numeric\"\n                    pattern=\"[0-9\\s]\"\n                    autocomplete=\"cc-number\"\n                    maxlength=\"3\"\n                    name=\"ccv\"\n                    placeholder=\"Enter 3 digit code\"\n                  ></input>\n                </div>\n\n                <div className=\"date\">\n                  <div className=\"form-group w-25\">\n                    <label>Month</label>\n                    <input\n                      onChange={props.handleFormChanges}\n                      name=\"expMonth\"\n                      maxlength=\"2\"\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"12\"\n                    />\n                  </div>\n                  <div className=\"form-group w-25\">\n                    <label>Year</label>\n                    <input\n                      onChange={props.handleFormChanges}\n                      name=\"expYear\"\n                      maxlength=\"4\"\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"2020\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <button\n            onClick={(e) => {\n              handleCaptureCheckout(e);\n            }}\n            class=\"btn btn-primary\"\n          >\n            Submit\n          </button>\n        </form>\n      </>\n    );\n  };\n  console.log(paymentInfo);\n  return (\n    // <>\n\n    // </>\n    <div>\n      checkout\n      {renderCheckoutForm()}\n      {/* <Confirmation/> */}\n    </div>\n  );\n};\n\nexport default CheckoutForm;\n","/Users/user/Documents/SEIR/unit4/project4/src/context/Payment.js",[],"/Users/user/Documents/SEIR/unit4/project4/src/context/Order.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":11,"column":10,"nodeType":"96","messageId":"97","endLine":11,"endColumn":15},{"ruleId":"94","severity":1,"message":"98","line":12,"column":10,"nodeType":"96","messageId":"97","endLine":12,"endColumn":14},{"ruleId":"99","severity":1,"message":"100","line":34,"column":6,"nodeType":"101","endLine":34,"endColumn":8,"suggestions":"102"},{"ruleId":"94","severity":1,"message":"98","line":8,"column":10,"nodeType":"96","messageId":"97","endLine":8,"endColumn":14},{"ruleId":"99","severity":1,"message":"103","line":31,"column":6,"nodeType":"101","endLine":31,"endColumn":8,"suggestions":"104"},{"ruleId":"94","severity":1,"message":"105","line":27,"column":9,"nodeType":"96","messageId":"97","endLine":27,"endColumn":31},{"ruleId":"99","severity":1,"message":"106","line":62,"column":6,"nodeType":"101","endLine":62,"endColumn":21,"suggestions":"107"},{"ruleId":"99","severity":1,"message":"108","line":66,"column":6,"nodeType":"101","endLine":66,"endColumn":21,"suggestions":"109"},{"ruleId":"94","severity":1,"message":"110","line":108,"column":7,"nodeType":"96","messageId":"97","endLine":108,"endColumn":24},{"ruleId":"94","severity":1,"message":"111","line":110,"column":7,"nodeType":"96","messageId":"97","endLine":110,"endColumn":22},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'order' is assigned a value but never used.","Identifier","unusedVar","'cart' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchProduct'. Either include it or remove the dependency array.","ArrayExpression",["114"],"React Hook useEffect has a missing dependency: 'generateCheckoutToken'. Either include it or remove the dependency array.",["115"],"'fetchShippingCountries' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchSubdivisions'. Either include it or remove the dependency array.",["116"],"React Hook useEffect has a missing dependency: 'getShippingOptions'. Either include it or remove the dependency array.",["117"],"'shippingCountries' is assigned a value but never used.","'shippingOptions' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},"Update the dependencies array to be: [fetchProduct]",{"range":"126","text":"127"},"Update the dependencies array to be: [generateCheckoutToken]",{"range":"128","text":"129"},"Update the dependencies array to be: [checkoutToken, fetchSubdivisions]",{"range":"130","text":"131"},"Update the dependencies array to be: [checkoutToken, getShippingOptions]",{"range":"132","text":"133"},[980,982],"[fetchProduct]",[991,993],"[generateCheckoutToken]",[1780,1795],"[checkoutToken, fetchSubdivisions]",[1850,1865],"[checkoutToken, getShippingOptions]"]