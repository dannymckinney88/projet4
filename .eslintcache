[{"/Users/user/Documents/SEIR/unit4/project4/src/index.js":"1","/Users/user/Documents/SEIR/unit4/project4/src/App.js":"2","/Users/user/Documents/SEIR/unit4/project4/src/lib/commerce.js":"3","/Users/user/Documents/SEIR/unit4/project4/src/components/Header.js":"4","/Users/user/Documents/SEIR/unit4/project4/src/config/routes.js":"5","/Users/user/Documents/SEIR/unit4/project4/src/pages/AllProducts.js":"6","/Users/user/Documents/SEIR/unit4/project4/src/pages/Cart.js":"7","/Users/user/Documents/SEIR/unit4/project4/src/pages/Home.js":"8","/Users/user/Documents/SEIR/unit4/project4/src/pages/SingleProduct.js":"9","/Users/user/Documents/SEIR/unit4/project4/src/components/Hero.js":"10","/Users/user/Documents/SEIR/unit4/project4/src/components/Products.js":"11","/Users/user/Documents/SEIR/unit4/project4/src/components/ProductItem.js":"12","/Users/user/Documents/SEIR/unit4/project4/src/components/CartItem.js":"13","/Users/user/Documents/SEIR/unit4/project4/src/pages/Checkout.js":"14","/Users/user/Documents/SEIR/unit4/project4/src/context/Cart.js":"15","/Users/user/Documents/SEIR/unit4/project4/src/components/CheckoutForm.js":"16","/Users/user/Documents/SEIR/unit4/project4/src/context/Payment.js":"17","/Users/user/Documents/SEIR/unit4/project4/src/context/Order.js":"18","/Users/user/Documents/SEIR/unit4/project4/src/pages/Confirmation.js":"19","/Users/user/Documents/SEIR/unit4/project4/src/components/Confirmation.js":"20"},{"size":715,"mtime":1608009131297,"results":"21","hashOfConfig":"22"},{"size":1165,"mtime":1608096802908,"results":"23","hashOfConfig":"22"},{"size":125,"mtime":1608075532847,"results":"24","hashOfConfig":"22"},{"size":1649,"mtime":1608065924700,"results":"25","hashOfConfig":"22"},{"size":1052,"mtime":1608072455762,"results":"26","hashOfConfig":"22"},{"size":992,"mtime":1608064308871,"results":"27","hashOfConfig":"22"},{"size":3111,"mtime":1608144300198,"results":"28","hashOfConfig":"22"},{"size":1430,"mtime":1608146818086,"results":"29","hashOfConfig":"22"},{"size":1214,"mtime":1608163204386,"results":"30","hashOfConfig":"22"},{"size":204,"mtime":1607710662783,"results":"31","hashOfConfig":"22"},{"size":414,"mtime":1608146648934,"results":"32","hashOfConfig":"22"},{"size":1232,"mtime":1608159259235,"results":"33","hashOfConfig":"22"},{"size":1188,"mtime":1608163367491,"results":"34","hashOfConfig":"22"},{"size":4222,"mtime":1608145302796,"results":"35","hashOfConfig":"22"},{"size":734,"mtime":1608008668126,"results":"36","hashOfConfig":"22"},{"size":9043,"mtime":1608145314112,"results":"37","hashOfConfig":"22"},{"size":1417,"mtime":1608006781402,"results":"38","hashOfConfig":"22"},{"size":396,"mtime":1608010525345,"results":"39","hashOfConfig":"22"},{"size":647,"mtime":1608145231488,"results":"40","hashOfConfig":"22"},{"size":583,"mtime":1608144421687,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"6mejoj",{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/user/Documents/SEIR/unit4/project4/src/index.js",[],["92","93"],"/Users/user/Documents/SEIR/unit4/project4/src/App.js",["94","95","96","97","98"],"import React, {useState, useEffect, useContext} from 'react';\nimport { CartContext } from './context/Cart'\nimport Header from './components/Header'\nimport Routes from './config/routes'\nimport { CartContextProvider } from \"./context/Cart\"\n\nimport { commerce } from \"./lib/commerce\";\n\n\n\n\n\nconst App = () => {\n  \n  const [cart] = useContext(CartContext)\n  const [checkoutToken, setCheckoutToken] = useState()\n\n//   const generateCheckoutToken = () => {\n//     // console.log(cart.cart)\n  \n//       commerce.checkout.generateToken(cart.cart.id, { type: 'cart' })\n//       .then((token) => {\n//         console.log(token)\n//         setCheckoutToken(token);})\n//         // .then(() =>fetchShippingCountries(checkoutToken.id))\n//         .catch((error) => {\n//           console.log('There was an error in generating a token', error);\n//         });\n    \n//       // // console.log(checkoutToken.id)\n// }\n  // useEffect(() => generateCheckoutToken(),[])\n\n\n  return (\n    <div>\n     {/* <CartContextProvider> */}\n         <Header cart={checkoutToken}/>\n         <Routes checkout={checkoutToken}/>\n     {/* </CartContextProvider> */}\n    </div>\n  );\n}\n\nexport default App;","/Users/user/Documents/SEIR/unit4/project4/src/lib/commerce.js",[],"/Users/user/Documents/SEIR/unit4/project4/src/components/Header.js",["99"],"import React, {useState, useEffect} from \"react\";\nimport {Button} from 'react-bootstrap'\nimport '../styles/nav.css'\nimport {Link} from \"react-router-dom\"\nimport Cart from '../pages/Cart'\n\n\nconst Header = (props) => {\n    // console.log(props.cart)\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n  return (\n<nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n    <div className=\"navbar-collapse collapse w-100 order-1 order-md-0 dual-collapse2\">\n        <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item active\">\n            <Link to={'/'}> Home </Link>\n            </li>\n        </ul>\n    </div>\n    <div className=\"mx-auto order-0\">\n        <h6 className=\"navbar-brand mx-auto\" href=\"#\">Danny's sweet shack</h6>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\".dual-collapse2\">\n            <span className=\"navbar-toggler-icon\"></span>\n        </button>\n    </div>\n    <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\n        <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n                <Link to={'/allproducts'}>   All Product </Link>\n            </li>\n            <li className=\"nav-item\">\n                {/* <Link to={'/cart'}>  Cart </Link> */}\n                <Button variant=\"primary\" onClick={handleShow}>\n                Cart\n                </Button>\n                <Cart show={show} handleShow={handleShow} handleClose={handleClose}/>\n            </li>\n        </ul>\n    </div>\n</nav>\n  );\n};\n\nexport default Header;\n","/Users/user/Documents/SEIR/unit4/project4/src/config/routes.js",[],"/Users/user/Documents/SEIR/unit4/project4/src/pages/AllProducts.js",[],"/Users/user/Documents/SEIR/unit4/project4/src/pages/Cart.js",["100","101"],"import React, {useContext, useEffect} from \"react\";\nimport { commerce } from \"../lib/commerce\";\nimport {Link} from \"react-router-dom\"\nimport { CartContext } from '../context/Cart'\nimport CartItem from \"../components/CartItem\"\nimport {Modal, Button} from \"react-bootstrap\"\n\nconst Cart = (props) => {\n    const [cart, setCart] = useContext(CartContext)\n\n// Api calls \n      const handleUpdateCartQty = (lineItemId, quantity) => {\n        // console.log(lineItemId)\n        // console.log(quantity  )\n          commerce.cart.update(lineItemId, { quantity }).then((resp) => {\n            console.log(resp.cart)\n            setCart({ cart: resp.cart })\n          }).catch((error) => {\n            console.log('There was an error updating the cart items', error);\n          });\n        }\n        //  Removes from cart\n        const handleRemoveFromCart =(lineItemId)=> {\n            commerce.cart.remove(lineItemId).then((resp) => {\n             setCart({\n                cart: resp.cart\n              })\n            }).catch((error) => {\n              console.error('There was an error removing the item from the cart', error);\n            });\n        }\n\n      // useEffect(()=>{fetchCart()},[])\n\n// Renders a cart\n      const renderEmptyCart = () =>{\n        // const items = cart.cart\n        if(cart){\n\n            if(cart.cart.total_unique_items > 0){\n                return;\n            }\n        }\n\n         return (\n            <p className=\"cart__none\">\n              You have no items in your shopping cart, start adding some!\n            </p>\n          );\n    }\n\n    const renderCart = () =>{\n        if(cart){\n          if(cart.cart.total_unique_items === 0){\n              return;\n          }\n\n          console.log(cart.cart)\n        }\n      return (\n          <>\n            { cart? cart.cart.line_items.map(lineItem => (\n              <CartItem\n                item={lineItem}\n                key={lineItem.id}\n                className=\"cart__inner\"\n                handleUpdateCartQty= {handleUpdateCartQty}\n                handleRemoveFromCart= {handleRemoveFromCart}\n              />\n            )):\"\" }\n            <div className=\"col-sm-8\">\n              <p className=\"cart__total-title\">Subtotal:</p>\n              <p className=\"cart__total-price\">{cart ? cart.cart.subtotal.formatted_with_symbol : \"$0.00\"}</p>\n            </div>\n          </>\n        );\n  }\n\n\n    return (\n        \n            <Modal show={props.show} onHide={props.handleClose} className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    { renderCart() }\n                    { renderEmptyCart() }\n                </div>\n                <div className=\"col\">\n                    <p className=\"cart__total-title\">Subtotal:</p>\n                    <p className=\"cart__total-price\">{cart ? cart.cart.subtotal.formatted_with_symbol : \"\"}</p>\n                    {cart ?  <Link to={`/checkout/${cart.cart.id}`} onClick={props.handleClose}>  Checkout </Link> : \"\"}\n                </div>\n            </div>\n\n            </Modal>\n\n        \n    );\n}\n\nexport default Cart;\n","/Users/user/Documents/SEIR/unit4/project4/src/pages/Home.js",[],"/Users/user/Documents/SEIR/unit4/project4/src/pages/SingleProduct.js",["102","103","104","105"],"/Users/user/Documents/SEIR/unit4/project4/src/components/Hero.js",[],"/Users/user/Documents/SEIR/unit4/project4/src/components/Products.js",[],"/Users/user/Documents/SEIR/unit4/project4/src/components/ProductItem.js",["106"],"import React, { useContext } from \"react\";\nimport \"../styles/product.css\";\nimport { commerce } from \"../lib/commerce\";\nimport { CartContext } from \"../context/Cart\";\nimport {Link} from \"react-router-dom\"\n\nconst Product = (props) => {\n  const [cart, setCart] = useContext(CartContext);\n\n  const handleAddToCart = () => {\n    commerce.cart\n      .add(props.product.id, 1)\n      .then((item) => {\n        console.log(item);\n        setCart({ cart: item.cart });\n      })\n      .catch((error) => {\n        console.error(\"There was an error adding the item to the cart\", error);\n      });\n  };\n  return (\n    <div className=\"product-card\">\n      <img\n        className=\"product-img\"\n        src={props.product.media.source}\n        alt={props}\n      />\n      <div>\n       <Link to={`/product/${props.product.id}`} style={{ textDecoration: 'none' }}> <h4 className=\"item-name\">{props.product.name}</h4> </Link> \n      </div>\n      <div >\n        <p >\n          {props.product.price.formatted_with_symbol}\n        </p>\n        <button\n          name=\"Add to cart\"\n          className=\"product-btn\"\n          onClick={handleAddToCart}\n        >\n          Quick Add\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Product;\n","/Users/user/Documents/SEIR/unit4/project4/src/components/CartItem.js",[],"/Users/user/Documents/SEIR/unit4/project4/src/pages/Checkout.js",["107","108","109","110","111"],"import React, {useState, useEffect, useContext} from 'react';\nimport { CartContext } from '../context/Cart'\nimport { PaymentContext } from '../context/Payment'\nimport { OrderContext } from '../context/Order'\nimport { commerce } from \"../lib/commerce\";\nimport CheckoutForm from \"../components/CheckoutForm\"\n\nconst Checkout = (props) => {\n  \n    const [cart, setCart] = useContext(CartContext)\n    const [paymentInfo, setPaymentInfo] = useContext(PaymentContext)\n    const [order, setOrder] = useContext(OrderContext)\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    \n\n    // const [cart, setCart] = useState()\n    const [checkoutToken, setCheckoutToken] = useState()\n\n    const cartId = props.match.params.cartId\n\n    const generateCheckoutToken = () => {\n          // if (props.cart.cart.line_items.length) {\n            commerce.checkout.generateToken(cartId, { type: 'cart' })\n            .then((token) => {\n              console.log(token)\n              setCheckoutToken(token);})\n              // .then(() =>fetchShippingCountries(checkoutToken.id))\n              .catch((error) => {\n                console.log('There was an error in generating a token', error);\n              });\n    }\n    useEffect(() =>{\n        generateCheckoutToken()\n    },[])\n\n\n   \n\n      const handleFormChanges = e =>{\n        setPaymentInfo(  {...paymentInfo, [e.target.name] : e.target.value,})\n    }\n\n    const refreshCart = () => {\n      commerce.cart.refresh().then((newCart) => {\n        setCart({ \n          cart: newCart,\n        });\n      }).catch((error) => {\n        console.log('There was an error refreshing your cart', error);\n      });\n    };\n\n    const handleCaptureCheckout = async (tokenId, newOrder) => {\n     \n      console.log(newOrder)\n      await commerce.checkout.capture(tokenId, newOrder).then((order) => {\n        console.log(order)\n        console.log(\"order\")\n        // Save the order into state\n        setOrder({\n          order,\n        });\n        // Clear the cart\n        console.log(order)\n        refreshCart();\n        // setPaymentInfo({})\n        // Send the user to the receipt \n        props.history.push('/confirmation');\n        // Store the order in session storage so we can show it again if the\n        // user refreshes the page!\n        window.sessionStorage.setItem('order_receipt', JSON.stringify(order));   \n      }).catch((error) => {\n        // setErrormsg(error.data.error.message)\n        console.log(error);\n        // console.log(errormsg)\n      });\n      console.log(order)\n      // this.props.onCaptureCheckout(paymentInfo.checkoutToken.id, orderData);\n    };\n\n    const getShippingOptions = (checkoutTokenId, country, region = null) => {\n\n      /* \n      Getting the Customer's Shipping Options based on the Country\n      Function is triggered once user selects country in CheckoutForm. \n      */\n     \n     \n    //  if (checkoutToken) {\n    //   console.log(checkoutToken.id)\n    //       commerce.checkout.getShippingOptions(checkoutToken.id, {\n    //           country: \"US\"\n    //       })\n    //           .then(res => {\n    //               console.log(res)\n    //               console.log('======++==========++======++========++')\n    //               let shippingOptionsArray = res.map(option => {\n    //                   console.log(option)\n    //                   let shInfo = {}\n  \n    //                   shInfo.key = \"US\"\n    //                   shInfo.text = `${option.description}(${option.price.formatted_with_code})`\n    //                   shInfo.value = option.id\n  \n    //                   return shInfo\n    //               })\n    //               // setShippingOptions(shippingOptionsArray)\n    //           })\n    //           .catch(err => console.log(err))\n    //   }\n  }\n  // useEffect(() =>{getShippingOptions()})\n    return (\n        <div>\n            <CheckoutForm\n              checkoutToken={checkoutToken}\n              paymentInfo={paymentInfo}\n              handleFormChanges={handleFormChanges}\n              handleCaptureCheckout={handleCaptureCheckout}\n              cart={cart}\n            />\n        </div>\n    );\n}\n\nexport default Checkout;\n","/Users/user/Documents/SEIR/unit4/project4/src/context/Cart.js",[],"/Users/user/Documents/SEIR/unit4/project4/src/components/CheckoutForm.js",["112","113","114","115","116","117"],"import React, {useState,useEffect, useContext} from 'react';\nimport { PaymentContext } from '../context/Payment'\n// import {Elements, CardElement,}\n\n\nimport { commerce } from \"../lib/commerce\";\nconst CheckoutForm = (props) => {\n\n    const [paymentInfo, setPaymentInfo] = useContext(PaymentContext)\n    const [option, setOption] = useState() \n    \n    let checkoutToken = props.checkoutToken\n    const  fetchSubdivisions =() =>{\n        console.log(\"fetch\")\n            commerce.services.localeListSubdivisions(\"US\").then((subdivisions) => {\n                console.log(subdivisions)\n                setPaymentInfo({\n                    \n                  \"shippingSubdivisions\": subdivisions.subdivisions,\n                })\n            }).catch((error) => {\n                console.log('There was an error fetching the subdivisions', error);\n            });\n        \n    }\n\n    const fetchShippingCountries =(checkoutTokenId) => {\n        if(checkoutToken){\n\n            commerce.services.localeListShippingCountries(checkoutToken.id).then((countries) => {\n                console.log(countries)\n                setPaymentInfo({ \n                shippingCountries: countries.countries,\n              })\n            }).catch((error) => {\n              console.log('There was an error fetching a list of shipping countries', error);\n            });\n        }\n      }\n\n      const getShippingOptions = (checkoutTokenId, country, region = null) => {\n\n        if (props.checkoutToken) {\n            commerce.checkout.getShippingOptions(props.checkoutToken.id, {\n                country: \"US\"\n            })\n                .then(res => {\n                    console.log(res)\n                    setOption(res[0].id)\n                    let shippingOptionsArray = res.map(option => {\n                        let shInfo = {}\n\n                        shInfo.key = \"US\"\n                        shInfo.text = `${option.description}(${option.price.formatted_with_code})`\n                        shInfo.value = option.id\n    \n                        return shInfo\n                    })\n                })\n                .catch(err => console.log(err))\n        }\n    }\n    \n    // useEffect(() =>{fetchShippingCountries()},[])\n    useEffect(() =>{fetchSubdivisions()},[checkoutToken])\n\n    useEffect(() =>{getShippingOptions()},[checkoutToken])\n\n    const handleCaptureCheckout = async (e) => {\n        e.preventDefault()\n        const orderData = {\n          line_items: checkoutToken.live.line_items,\n          customer: {\n            firstname: paymentInfo.firstName,\n            lastname: paymentInfo.lastName,\n            email: paymentInfo.email,\n          },\n          shipping: {\n            name: paymentInfo.shippingName,\n            street: paymentInfo.shippingStreet,\n            town_city: paymentInfo.shippingCity,\n            county_state: \"AZ\",\n            postal_zip_code: paymentInfo.shippingPostalZipCode,\n            country: \"US\",\n          },\n          fulfillment: {\n            shipping_method: option\n          },\n          payment: {\n            gateway: \"test_gateway\",\n            card: {\n              number: paymentInfo.cardNum,\n              expiry_month: paymentInfo.expMonth,\n              expiry_year: paymentInfo.expYear,\n              cvc: paymentInfo.ccv,\n              postal_zip_code: paymentInfo.shippingPostalZipCode,\n            },\n          },\n        };\n  \n        console.log(checkoutToken)\n        console.log(orderData)\n        props.handleCaptureCheckout(checkoutToken.id, orderData);\n      };\n      \n\n      const renderCheckoutForm = () => {\n        const { shippingCountries, shippingSubdivisions, shippingOptions } = paymentInfo\n        return (\n            <form className=\"checkout__form\" onChange={props.handleFormChanges}>\n                <h4 className=\"checkout__subheading\">Customer information</h4>\n\n                    <label className=\"checkout__label\" htmlFor=\"firstName\">First name</label>\n                    <input className=\"checkout__input\" type=\"text\" onChange={props.handleFormChanges}  name=\"firstName\" placeholder=\"Enter your first name\" required />\n\n                    <label className=\"checkout__label\" htmlFor=\"lastName\">Last name</label>\n                    <input className=\"checkout__input\" type=\"text\" onChange={props.handleFormChanges}  name=\"lastName\" placeholder=\"Enter your last name\" required />\n\n                    <label className=\"checkout__label\" htmlFor=\"email\">Email</label>\n                    <input className=\"checkout__input\" type=\"text\" onChange={props.handleFormChanges}   name=\"email\" placeholder=\"Enter your email\" required />\n\n                <h4 className=\"checkout__subheading\">Shipping details</h4>\n\n                <label className=\"checkout__label\" htmlFor=\"shippingName\">Full name</label>\n                <input className=\"checkout__input\" type=\"text\" onChange={props.handleFormChanges}   name=\"shippingName\" placeholder=\"Enter your shipping full name\" required />\n\n                <label className=\"checkout__label\" htmlFor=\"shippingStreet\">Street address</label>\n                <input className=\"checkout__input\" type=\"text\"  onChange={props.handleFormChanges}  name=\"shippingStreet\" placeholder=\"Enter your street address\" required />\n\n                <label className=\"checkout__label\" htmlFor=\"shippingCity\">City</label>\n                <input className=\"checkout__input\" type=\"text\" onChange={props.handleFormChanges}  name=\"shippingCity\" placeholder=\"Enter your city\" required />\n\n                <label className=\"checkout__label\" htmlFor=\"shippingPostalZipCode\">Postal/Zip code</label>\n                <input className=\"checkout__input\" type=\"text\" onChange={props.handleFormChanges}  name=\"shippingPostalZipCode\" placeholder=\"Enter your postal/zip code\" required />\n\n                <label className=\"checkout__label\" htmlFor=\"shippingCountry\">Country</label>\n                <select\n                    name=\"shippingCountry\"\n                    className=\"checkout__select\"\n                >\n                    <option disabled>Country</option>\n                    <option>USA</option>\n                    {/* {\n                        Object.keys(shippingSubdivisions).map((index) => {\n                            return (\n                                <option  value={index} key={index}>{shippingSubdivisions[index]}</option>\n                            );\n                        })\n                    } */}\n                </select>\n\n                <label className=\"checkout__label\" htmlFor=\"shippingStateProvince\">State/province</label>\n                <select\n                    name=\"shippingStateProvince\"\n                    onChange={props.handleFormChanges}\n                    className=\"checkout__select\"\n                >\n                    <option className=\"checkout__option\" disabled>State province</option>\n                    {checkoutToken?\n                        Object.keys(shippingSubdivisions).map((index) => {\n                            return (\n                                <option  value={index} key={index}>{shippingSubdivisions[index]}</option>\n                            );\n                        }) :\"\"\n                    };\n\n                </select>\n\n                <label className=\"checkout__label\" htmlFor=\"shippingOption\">Shipping method</label>\n                <select\n                    name=\"shippingOption\"\n                    \n                    className=\"checkout__select\"\n                >\n                    <option className=\"checkout__select-option\" disabled>Select a shipping method</option>\n                    <option>Free standard</option>\n                </select>\n\n                <h4 className=\"checkout__subheading\">Payment information</h4>\n\n                <label className=\"checkout__label\" htmlFor=\"cardNum\">Credit card number</label>\n                <input className=\"checkout__input\" onChange={props.handleFormChanges} type=\"text\" name=\"cardNum\"   placeholder=\"Enter your card number\" required/>\n\n                <label className=\"checkout__label\" htmlFor=\"expMonth\">Expiry month</label>\n                <input className=\"checkout__input\" onChange={props.handleFormChanges} type=\"text\" name=\"expMonth\"   placeholder=\"Card expiry month\" required/>\n\n                <label className=\"checkout__label\" htmlFor=\"expYear\">Expiry year</label>\n                <input className=\"checkout__input\" onChange={props.handleFormChanges} type=\"text\" name=\"expYear\"   placeholder=\"Card expiry year\" required/>\n\n                <label className=\"checkout__label\" htmlFor=\"ccv\">CCV</label>\n                <input className=\"checkout__input\" onChange={props.handleFormChanges} type=\"text\" name=\"ccv\"  placeholder=\"CCV (3 digits)\" required/>\n\n                <button onClick={(e)=>{handleCaptureCheckout(e)}} className=\"checkout__btn-confirm\">Confirm order</button>\n            </form>\n        );\n    };\n      console.log(props.handleShow)\n    return (\n        <div>\n        checkout\n            {renderCheckoutForm()}\n        </div>\n    );\n}\n\nexport default CheckoutForm;\n","/Users/user/Documents/SEIR/unit4/project4/src/context/Payment.js",["118"],"import React, { useState, useEffect, createContext } from \"react\";\n// import { commerce } from \"../lib/commerce\";\n\nconst PaymentContext = createContext();\n\nconst PaymentContextProvider = (props) => {\n \n    const [paymentInfo, setPaymentInfo] = useState({\n                // Customer details\n                firstName: 'Jane',\n                lastName: 'Doe',\n                email: 'janedoe@email.com',\n                // Shipping details\n                shippingName: 'Jane Doe',\n                shippingStreet: '123 Fake St',\n                shippingCity: 'San Francisco',\n                shippingStateProvince: 'CA',\n                shippingPostalZipCode: '94107',\n                shippingCountry: 'US',\n                // Payment details\n                cardNum: '4242 4242 4242 4242',\n                expMonth: '11',\n                expYear: '2023',\n                ccv: '123',\n                billingPostalZipcode: '94107',\n                // Shipping and fulfillment data\n                shippingCountries: {},\n                shippingSubdivisions: {},\n                shippingOptions: [],\n                shippingOption: '',\n    })\n\n    \n    // useEffect( ()=>{ fetchCart()},[])\n    // console.log(props.children)\n  \n  return (\n    <PaymentContext.Provider value={[paymentInfo, setPaymentInfo]}>\n      {props.children}\n    </PaymentContext.Provider>\n  );\n};\n\nexport { PaymentContext ,PaymentContextProvider };","/Users/user/Documents/SEIR/unit4/project4/src/context/Order.js",["119","120"],"import React, { useState, useEffect, createContext } from \"react\";\n\nconst OrderContext = createContext();\n\nconst OrderContextProvider = (props) => {\n \n    const [orderContext, setOrderContext] = useState()\n\n  \n  return (\n    <OrderContext.Provider value={[OrderContext, setOrderContext]}>\n      {props.children}\n    </OrderContext.Provider>\n  );\n};\n\nexport { OrderContext ,OrderContextProvider };","/Users/user/Documents/SEIR/unit4/project4/src/pages/Confirmation.js",["121","122","123","124"],"import React, {useContext} from 'react'\nimport { PaymentContext } from '../context/Payment'\nimport { OrderContext } from '../context/Order'\nimport {Modal, Button} from \"react-bootstrap\"\n\nfunction Confirmation(props) {\n\n    const [order, setOrder] = useContext(OrderContext)\n    // console.log(order)\n    console.log(props.show)\n    return (\n        <Modal  show={props.show} className=\"container-fluid\">\n        <div className=\"row\">\n            <div className=\"col\">\n             tests\n            </div>\n            <div className=\"col\">\n           22323\n            </div>\n        </div>\n\n        </Modal>\n\n    )\n}\n\nexport default Confirmation\n","/Users/user/Documents/SEIR/unit4/project4/src/components/Confirmation.js",["125","126","127"],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":1,"column":26,"nodeType":"134","messageId":"135","endLine":1,"endColumn":35},{"ruleId":"132","severity":1,"message":"136","line":5,"column":10,"nodeType":"134","messageId":"135","endLine":5,"endColumn":29},{"ruleId":"132","severity":1,"message":"137","line":7,"column":10,"nodeType":"134","messageId":"135","endLine":7,"endColumn":18},{"ruleId":"132","severity":1,"message":"138","line":15,"column":10,"nodeType":"134","messageId":"135","endLine":15,"endColumn":14},{"ruleId":"132","severity":1,"message":"139","line":16,"column":25,"nodeType":"134","messageId":"135","endLine":16,"endColumn":41},{"ruleId":"132","severity":1,"message":"133","line":1,"column":26,"nodeType":"134","messageId":"135","endLine":1,"endColumn":35},{"ruleId":"132","severity":1,"message":"133","line":1,"column":28,"nodeType":"134","messageId":"135","endLine":1,"endColumn":37},{"ruleId":"132","severity":1,"message":"140","line":6,"column":16,"nodeType":"134","messageId":"135","endLine":6,"endColumn":22},{"ruleId":"132","severity":1,"message":"141","line":3,"column":27,"nodeType":"134","messageId":"135","endLine":3,"endColumn":39},{"ruleId":"132","severity":1,"message":"142","line":3,"column":41,"nodeType":"134","messageId":"135","endLine":3,"endColumn":61},{"ruleId":"132","severity":1,"message":"143","line":3,"column":63,"nodeType":"134","messageId":"135","endLine":3,"endColumn":74},{"ruleId":"144","severity":1,"message":"145","line":22,"column":38,"nodeType":"146","endLine":22,"endColumn":40,"suggestions":"147"},{"ruleId":"132","severity":1,"message":"138","line":8,"column":10,"nodeType":"134","messageId":"135","endLine":8,"endColumn":14},{"ruleId":"132","severity":1,"message":"148","line":13,"column":12,"nodeType":"134","messageId":"135","endLine":13,"endColumn":16},{"ruleId":"132","severity":1,"message":"149","line":15,"column":11,"nodeType":"134","messageId":"135","endLine":15,"endColumn":22},{"ruleId":"132","severity":1,"message":"150","line":16,"column":11,"nodeType":"134","messageId":"135","endLine":16,"endColumn":21},{"ruleId":"144","severity":1,"message":"151","line":37,"column":7,"nodeType":"146","endLine":37,"endColumn":9,"suggestions":"152"},{"ruleId":"132","severity":1,"message":"153","line":84,"column":11,"nodeType":"134","messageId":"135","endLine":84,"endColumn":29},{"ruleId":"132","severity":1,"message":"154","line":27,"column":11,"nodeType":"134","messageId":"135","endLine":27,"endColumn":33},{"ruleId":"132","severity":1,"message":"155","line":50,"column":25,"nodeType":"134","messageId":"135","endLine":50,"endColumn":45},{"ruleId":"144","severity":1,"message":"156","line":65,"column":42,"nodeType":"146","endLine":65,"endColumn":57,"suggestions":"157"},{"ruleId":"144","severity":1,"message":"158","line":67,"column":43,"nodeType":"146","endLine":67,"endColumn":58,"suggestions":"159"},{"ruleId":"132","severity":1,"message":"160","line":108,"column":17,"nodeType":"134","messageId":"135","endLine":108,"endColumn":34},{"ruleId":"132","severity":1,"message":"161","line":108,"column":58,"nodeType":"134","messageId":"135","endLine":108,"endColumn":73},{"ruleId":"132","severity":1,"message":"133","line":1,"column":27,"nodeType":"134","messageId":"135","endLine":1,"endColumn":36},{"ruleId":"132","severity":1,"message":"133","line":1,"column":27,"nodeType":"134","messageId":"135","endLine":1,"endColumn":36},{"ruleId":"132","severity":1,"message":"162","line":7,"column":12,"nodeType":"134","messageId":"135","endLine":7,"endColumn":24},{"ruleId":"132","severity":1,"message":"163","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":24},{"ruleId":"132","severity":1,"message":"140","line":4,"column":16,"nodeType":"134","messageId":"135","endLine":4,"endColumn":22},{"ruleId":"132","severity":1,"message":"164","line":8,"column":12,"nodeType":"134","messageId":"135","endLine":8,"endColumn":17},{"ruleId":"132","severity":1,"message":"165","line":8,"column":19,"nodeType":"134","messageId":"135","endLine":8,"endColumn":27},{"ruleId":"132","severity":1,"message":"163","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":24},{"ruleId":"132","severity":1,"message":"140","line":4,"column":16,"nodeType":"134","messageId":"135","endLine":4,"endColumn":22},{"ruleId":"132","severity":1,"message":"165","line":8,"column":19,"nodeType":"134","messageId":"135","endLine":8,"endColumn":27},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'CartContextProvider' is defined but never used.","'commerce' is defined but never used.","'cart' is assigned a value but never used.","'setCheckoutToken' is assigned a value but never used.","'Button' is defined but never used.","'processNodes' is defined but never used.","'convertNodeToElement' is defined but never used.","'htmlparser2' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchProduct'. Either include it or remove the dependency array.","ArrayExpression",["168"],"'show' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleShow' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'generateCheckoutToken'. Either include it or remove the dependency array.",["169"],"'getShippingOptions' is assigned a value but never used.","'fetchShippingCountries' is assigned a value but never used.","'shippingOptionsArray' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchSubdivisions'. Either include it or remove the dependency array.",["170"],"React Hook useEffect has a missing dependency: 'getShippingOptions'. Either include it or remove the dependency array.",["171"],"'shippingCountries' is assigned a value but never used.","'shippingOptions' is assigned a value but never used.","'orderContext' is assigned a value but never used.","'PaymentContext' is defined but never used.","'order' is assigned a value but never used.","'setOrder' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},"Update the dependencies array to be: [fetchProduct]",{"range":"180","text":"181"},"Update the dependencies array to be: [generateCheckoutToken]",{"range":"182","text":"183"},"Update the dependencies array to be: [checkoutToken, fetchSubdivisions]",{"range":"184","text":"185"},"Update the dependencies array to be: [checkoutToken, getShippingOptions]",{"range":"186","text":"187"},[651,653],"[fetchProduct]",[1342,1344],"[generateCheckoutToken]",[2258,2273],"[checkoutToken, fetchSubdivisions]",[2318,2333],"[checkoutToken, getShippingOptions]"]